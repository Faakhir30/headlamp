{{- $oidc := .Values.config.oidc }}
{{- $env := .Values.env }}

{{- $clientID := "" }}
{{- $clientSecret := "" }}
{{- $issuerURL := "" }}
{{- $scopes := "" }}

# This block of code is used to extract the values from the env.
# This is done to check if the values are non-empty and if they are, they are used in the deployment.yaml.
{{- range $env }}
  {{- if eq .name "OIDC_CLIENT_ID" }}
    {{- $clientID = .value }}
  {{- end }}
  {{- if eq .name "OIDC_CLIENT_SECRET" }}
    {{- $clientSecret = .value }}
  {{- end }}
  {{- if eq .name "OIDC_ISSUER_URL" }}
    {{- $issuerURL = .value }}
  {{- end }}
  {{- if eq .name "OIDC_SCOPES" }}
    {{- $scopes = .value }}
  {{- end }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "headlamp.fullname" . }}
  labels:
    {{- include "headlamp.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "headlamp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
        {{- if .Values.pluginInstaller.config.enabled }}
        checksum/plugin-config: {{ include (print $.Template.BasePath "/configmap-plugins.yaml") . | sha256sum }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "headlamp.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "headlamp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.pluginInstaller.config.enabled }}
        - name: plugin-installer
          image: "{{ .Values.pluginInstaller.image.repository }}:{{ .Values.pluginInstaller.image.tag }}"
          imagePullPolicy: {{ .Values.pluginInstaller.image.pullPolicy }}
          env:
            - name: PLUGINS_DIR
              value: "/headlamp/plugins"
            - name: CONFIG_DIR
              value: "/config"
            - name: LOG_LEVEL
              value: "info"
          volumeMounts:
            - name: plugins
              mountPath: /headlamp/plugins
            - name: plugin-config
              mountPath: /config
              readOnly: true
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        {{- end }}
        {{- with .Values.initContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.config.baseURL }}
            - name: BASE_URL
              value: {{ .Values.config.baseURL | quote }}
            {{- end }}
            {{- if .Values.config.oidc.secret.create }}
            - name: OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.oidc.secret.name }}
                  key: clientID
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.oidc.secret.name }}
                  key: clientSecret
            - name: OIDC_ISSUER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.oidc.secret.name }}
                  key: issuerURL
            - name: OIDC_SCOPES
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.oidc.secret.name }}
                  key: scopes
            {{- else if .Values.config.oidc.externalSecret.enabled }}
            - name: OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.oidc.externalSecret.name }}
                  key: clientID
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.oidc.externalSecret.name }}
                  key: clientSecret
            - name: OIDC_ISSUER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.oidc.externalSecret.name }}
                  key: issuerURL
            - name: OIDC_SCOPES
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.oidc.externalSecret.name }}
                  key: scopes
            {{- else }}
            {{- if .Values.config.oidc.clientID }}
            - name: OIDC_CLIENT_ID
              value: {{ .Values.config.oidc.clientID | quote }}
            {{- end }}
            {{- if .Values.config.oidc.clientSecret }}
            - name: OIDC_CLIENT_SECRET
              value: {{ .Values.config.oidc.clientSecret | quote }}
            {{- end }}
            {{- if .Values.config.oidc.issuerURL }}
            - name: OIDC_ISSUER_URL
              value: {{ .Values.config.oidc.issuerURL | quote }}
            {{- end }}
            {{- if .Values.config.oidc.scopes }}
            - name: OIDC_SCOPES
              value: {{ .Values.config.oidc.scopes | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.config.pluginsDir }}
            - name: PLUGINS_DIR
              value: {{ .Values.config.pluginsDir | quote }}
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 4466
              protocol: TCP
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
